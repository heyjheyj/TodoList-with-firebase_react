{"version":3,"sources":["Components/todoItem/todoItem.module.css","Components/login/login.module.css","Components/todoheader/todoheader.module.css","Components/todolist/todolist.module.css","Components/todocreate/todocreate.module.css","app.module.css","Components/todoContainer/todoContainer.module.css","Components/todocreate/todocreate.jsx","Components/todoheader/todoheader.jsx","Components/todoItem/todoItem.jsx","Components/todolist/todolist.jsx","Components/todoContainer/todoContainer.jsx","Components/login/login.jsx","app.jsx","service/firebase.js","service/auth.js","index.js","service/todoRepository.js"],"names":["module","exports","Todocreate","memo","onCreateTodo","user","textRef","useRef","formRef","onSubmit","e","preventDefault","current","value","todo","id","Date","now","text","done","reset","className","styles","inputfield","ref","autoFocus","placeholder","input","submit","today","dateString","toLocaleDateString","year","month","day","dayName","weekday","Todoheader","onLogout","header","title","logout","onClick","TodoItem","deleteTodo","editTodo","onChecked","useState","editMode","setEditMode","setText","onEdit","updated","onDelete","items","item","contents","checkbox","type","checked","onChange","target","onKeyPress","key","currentTarget","defaultValue","textInput","onBlur","buttons","icon","faEdit","edit","faTrashAlt","trash","Todolist","todos","container","todolist","lists","length","filter","listContainer","map","TodoContainer","authService","todoRepository","setTodos","location","useLocation","navigate","useNavigate","state","userId","setUserId","useEffect","stopSync","syncTodos","result","Object","keys","push","onAuthChange","uid","useCallback","todoToDel","removeTodo","todoToEdit","saveTodo","checkedTodo","todoToCreate","Login","goTodolist","login","list","loginbtn","event","textContent","then","data","App","background","app","path","element","firebaseApp","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","getDatabase","AuthService","this","firebaseAuth","getAuth","googleProvider","GoogleAuthProvider","providerName","authProvider","getProvider","signInWithPopup","signOut","onUserChanged","onAuthStateChanged","Error","db","set","remove","onUpdate","query","onValue","snapshot","val","off","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eeb5cf4f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"todoItem_items__2PZzu\",\"item\":\"todoItem_item__17ZvD\",\"contents\":\"todoItem_contents__O7uhh\",\"buttons\":\"todoItem_buttons__1Sbvt\",\"textInput\":\"todoItem_textInput__2mBP8\",\"trash\":\"todoItem_trash__1Kp90\",\"edit\":\"todoItem_edit__bA2n0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login_login__3Yz6K\",\"loginbtn\":\"login_loginbtn__1YbGD\",\"text\":\"login_text__loECo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"todoheader_header__e_IZh\",\"logout\":\"todoheader_logout__3ZYRs\",\"day\":\"todoheader_day____xys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todolist\":\"todolist_todolist__ruzAv\",\"lists\":\"todolist_lists__1SrVC\",\"listContainer\":\"todolist_listContainer__1pF-e\",\"container\":\"todolist_container__3GaEz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputfield\":\"todocreate_inputfield__3JrYr\",\"input\":\"todocreate_input__19Tnz\",\"submit\":\"todocreate_submit__3fgNB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__cewju\",\"background\":\"app_background__3Ad_6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"todoContainer_container__2H0Tx\"};","import React, { memo, useRef } from \"react\";\nimport styles from \"./todocreate.module.css\";\n\nconst Todocreate = memo(({ onCreateTodo, user }) => {\n  const textRef = useRef();\n  const formRef = useRef();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (textRef.current.value === \"\") {\n      return;\n    } else {\n      const todo = {\n        id: Date.now(),\n        text: textRef.current.value,\n        done: false,\n        user: user\n      };\n      formRef.current.reset();\n      onCreateTodo(todo);\n    }\n  };\n\n  return (\n    <form className={styles.inputfield} ref={formRef} onSubmit={onSubmit}>\n      <input\n        autoFocus\n        ref={textRef}\n        placeholder=\"Input Something..\"\n        className={styles.input}\n      />\n      <button onSubmit={onSubmit} className={styles.submit}>\n        +\n      </button>\n    </form>\n  );\n});\n\nexport default Todocreate;\n","import React, { memo } from \"react\";\nimport styles from \"./todoheader.module.css\";\n\nconst today = new Date();\nlet dateString = today.toLocaleDateString(\"ko-KR\", {\n  year: \"numeric\",\n  month: \"long\",\n  day: \"numeric\"\n});\nconst dayName = today.toLocaleDateString(\"ko-KR\", { weekday: \"long\" });\n\nconst Todoheader = memo(({ onLogout }) => {    \n  const logout = () => {\n      onLogout();\n  };\n\n  return (<>\n    <header className={styles.header}>\n      <h2 className={styles.title}>\n        {dateString}\n      </h2>\n      <button className={styles.logout} onClick={logout}>\n       Logout\n      </button>\n    </header>\n    <p className={styles.day}>\n    {dayName}\n    </p>\n    </>\n  );\n});\n\nexport default Todoheader;\n","import React, { useState, useRef } from \"react\";\nimport styles from \"./todoItem.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TodoItem = ({ todo, deleteTodo, editTodo, onChecked }) => {\n  const textRef = useRef();\n\n  const [editMode, setEditMode] = useState(false);\n  const [text, setText] = useState(todo.text);\n\n  const onEdit = () => {\n    setEditMode(true);\n    if (text) {\n      const updated = {\n        id: todo.id,\n        text: text,\n        user: todo.user,\n        done: todo.done\n      };\n      editTodo(updated);\n    }\n  };\n\n  const onChangeText = e => {\n    e.preventDefault();\n    setText(e.target.value);\n  };\n\n  const onDelete = () => {\n    deleteTodo(todo);\n  };\n\n  const onToggle = e => {\n    if (e.target) {\n      const updated = {\n        id: todo.id,\n        text: todo.text,\n        user: todo.user,\n        done: !todo.done\n      };\n      onChecked(updated);\n    }\n  };\n\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      if (e.currentTarget.value === \"\") {\n        onDelete();\n      } else onEdit();\n      setEditMode(false);\n    }\n  };\n\n  const onBlur = e => {\n    e.preventDefault();\n    if (e.currentTarget.value === \"\") {\n      onDelete();\n    } else {\n      onEdit();\n    }\n    setEditMode(false);\n  };\n\n  return (\n    <ul className={styles.items}>\n      <li className={styles.item}>\n        <section className={styles.contents}>\n          <input\n            className={styles.checkbox}\n            type=\"checkbox\"\n            checked={todo.done}\n            onChange={onToggle}\n          />\n          {editMode === true\n            ? <input\n                type=\"text\"\n                onKeyPress={handleKeyPress}\n                onChange={onChangeText}\n                defaultValue={todo.text}\n                className={styles.textInput}\n                onBlur={onBlur}\n                autoFocus\n              />\n            : <span ref={textRef}>\n                {todo.text}\n              </span>}\n        </section>\n        <section className={styles.buttons}>\n          <button onClick={onEdit}>\n            <FontAwesomeIcon icon={faEdit} className={styles.edit} />\n          </button>\n          <button onClick={onDelete}>\n            <FontAwesomeIcon icon={faTrashAlt} className={styles.trash} />\n          </button>\n        </section>\n      </li>\n    </ul>\n  );\n};\n\nexport default TodoItem;\n","import React from \"react\";\nimport styles from \"./todolist.module.css\";\nimport TodoItem from \"../todoItem/todoItem\";\n\nconst Todolist = ({ todos, deleteTodo, editTodo, onChecked }) => {\n  return (\n    <div className={styles.container}>\n      <section className={styles.todolist}>\n        <span className={styles.lists}>\n          해야할 일 :\n          {todos.length > 0\n            ? todos.filter(todo => todo.done === false).length\n            : \"\"}{\" \"}\n          / 끝낸 일 :\n          {todos.length > 0\n            ? todos.filter(todo => todo.done === true).length\n            : \"\"}\n        </span>\n      </section>\n      <section className={styles.listContainer}>\n        {todos.map(todo =>\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            deleteTodo={deleteTodo}\n            editTodo={editTodo}\n            onChecked={onChecked}\n          />\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default Todolist;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Todocreate from \"../todocreate/todocreate\";\nimport Todoheader from \"../todoheader/todoheader\";\nimport Todolist from \"../todolist/todolist\";\nimport styles from \"./todoContainer.module.css\";\n\nconst TodoContainer = ({ authService, todoRepository }) => {\n  const [todos, setTodos] = useState([]);\n\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [userId, setUserId] = useState(location && location.state.id);\n\n  useEffect(\n    () => {\n      if (!userId) {\n        return;\n      }\n      const stopSync = todoRepository.syncTodos(userId, todos => {\n        const result = [];\n        Object.keys(todos).map(key => {\n          result.push(todos[key]);\n          return result;\n        });\n        setTodos(result);\n      });\n      return () => stopSync();\n    },\n    [userId, todoRepository]\n  );\n\n  useEffect(\n    () => {\n      authService.onAuthChange(user => {\n        if (user) {\n          setUserId(user.uid);\n        } else {\n          navigate(\"/\");\n        }\n      });\n    },\n    [authService, userId, navigate]\n  );\n\n  const onLogout = useCallback(\n    () => {\n      authService.logout();\n      if (!userId) {\n        navigate(\"/\");\n      }\n    },\n    [authService, navigate, userId]\n  );\n\n  const onCreateTodo = todoToCreate => {\n    setTodos(todos => {\n      const updated = { ...todos };\n      updated[todoToCreate.id] = todoToCreate;\n      return updated;\n    });\n    todoRepository.saveTodo(userId, todoToCreate);\n  };\n\n  const onEditTodo = todoToEdit => {\n    setTodos(todos => {\n      const updated = todos.map(\n        todo =>\n          todo.id === todoToEdit.id ? { ...todo, text: todoToEdit.text } : todo\n      );\n      return updated;\n    });\n    todoRepository.saveTodo(userId, todoToEdit);\n  };\n\n  const deleteTodo = todoToDel => {\n    setTodos(todos => {\n      return todos.filter(todo => todo.id !== todoToDel.id);\n    });\n    todoRepository.removeTodo(userId, todoToDel);\n  };\n\n  const onChecked = checkedTodo => {\n    setTodos(todos => {\n      const updated = todos.map(\n        todo =>\n          todo.id === checkedTodo.id\n            ? { ...todo, done: checkedTodo.done }\n            : todo\n      );\n      return updated;\n    });\n    todoRepository.saveTodo(userId, checkedTodo);\n  };\n\n  return (\n    <div className={styles.container}>\n      <Todoheader onLogout={onLogout} />\n      {todos &&\n        <Todolist\n          todos={todos}\n          deleteTodo={deleteTodo}\n          editTodo={onEditTodo}\n          onChecked={onChecked}\n        />}\n      <Todocreate user={userId} onCreateTodo={onCreateTodo} />\n    </div>\n  );\n};\n\nexport default TodoContainer;\n","import React, { useEffect } from \"react\";\nimport { useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./login.module.css\";\n\nconst Login = ({ authService }) => {\n  const navigate = useNavigate();\n\n  const goTodolist = useCallback(\n    userId => {\n      navigate(\"/todolist\", {\n        state: { id: userId }\n      });\n    },\n    [navigate]\n  );\n\n  useEffect(\n    () => {\n      authService.onAuthChange(user => {\n        user && goTodolist(user.uid);\n      });\n    },\n    [authService, goTodolist]\n  );\n\n  const onLogin = event => {\n    authService //\n      .login(event.currentTarget.textContent)\n      .then(data => {\n        goTodolist(data.user.uid);\n      });\n  };\n\n  return (\n    <section className={styles.login}>\n      <h1 className={styles.text}>Login</h1>\n      <ul className={styles.list}>\n        <li className={styles.item}>\n          <button className={styles.loginbtn} onClick={onLogin}>\n            Google\n          </button>\n        </li>\n      </ul>\n    </section>\n  );\n};\n\nexport default Login;\n","import styles from \"./app.module.css\";\nimport React from \"react\";\nimport TodoContainer from \"./Components/todoContainer/todoContainer\";\nimport Login from \"./Components/login/login\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\nfunction App({ todoRepository, authService }) {\n  return (\n    <section className={styles.background}>\n      <div className={styles.app}>\n        <BrowserRouter>\n          <Routes>\n            <Route path=\"/\" element={<Login authService={authService} />} />\n            <Route\n              path=\"/todolist\"\n              element={\n                <TodoContainer\n                  authService={authService}\n                  todoRepository={todoRepository}\n                />\n              }\n            />\n          </Routes>\n        </BrowserRouter>\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n","import { initializeApp } from \"firebase/app\";\nimport { getDatabase } from \"firebase/database\";\n\n// https://firebase.google.com/docs/web/setup#available-libraries\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PRODUCT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_BUCKET\n};\n\n// Initialize Firebase\nexport const firebaseApp = initializeApp(firebaseConfig);\n\nexport const database = getDatabase(firebaseApp);\n","import { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\n\nclass AuthService {\n  constructor() {\n    this.firebaseAuth = getAuth();\n    this.googleProvider = new GoogleAuthProvider();\n  }\n\n  login(providerName) {\n    const authProvider = this.getProvider(providerName);\n    return signInWithPopup(this.firebaseAuth, authProvider);\n  }\n\n  logout() {\n    this.firebaseAuth.signOut();\n  }\n\n  onAuthChange(onUserChanged) {\n    this.firebaseAuth.onAuthStateChanged((user) => {\n      onUserChanged(user);\n    });\n  }\n\n  getProvider(providerName) {\n    switch (providerName) {\n      case \"Google\":\n        return this.googleProvider;\n      default:\n        throw new Error(`not supported provider: ${providerName}`);\n    }\n  }\n}\n\nexport default AuthService;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport { firebaseApp } from \"./service/firebase\";\nimport AuthService from \"./service/auth\";\n\nimport TodoRepository from \"./service/todoRepository\";\n\nconst todoRepository = new TodoRepository(firebaseApp);\nconst authService = new AuthService(firebaseApp);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App authService={authService} todoRepository={todoRepository} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { set, ref, remove, onValue, off, getDatabase } from \"firebase/database\";\n\nclass TodoRepository {\n  constructor(app) {\n    this.db = getDatabase(app);\n  }\n\n  saveTodo(userId, todo) {\n    set(ref(this.db, `${userId}/todos/${todo.id}`), todo);\n  }\n\n  removeTodo(userId, todo) {\n    remove(ref(this.db, `${userId}/todos/${todo.id}`));\n  }\n\n  syncTodos(userId, onUpdate) {\n    const query = ref(this.db, `${userId}/todos/`);\n    onValue(query, (snapshot) => {\n      const value = snapshot.val();\n      value && onUpdate(value);\n    });\n    return () => off(query);\n  }\n}\n\nexport default TodoRepository;\n"],"sourceRoot":""}